/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/
/*
Copyright (C) 1991-2009 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/
(header "symbol" (version "1.1"))
(symbol
	(rect 64 64 232 248)
	(text "ALTMEMMULT" (rect 41 0 144 16)(font "Arial" (font_size 10)))
	(text "inst" (rect 0 168 17 180)(font "Arial" ))
	(port
		(pt 0 136)
		(input)
		(text "clock" (rect 20 106 49 120)(font "Arial" (font_size 8)))
		(text "clock" (rect 20 129 49 143)(font "Arial" (font_size 8)))
		(line (pt 0 136)(pt 16 136)(line_width 1))
	)
	(port
		(pt 0 24)
		(input)
		(text "data_in[WIDTH_D-1..0]" (rect 20 18 147 32)(font "Arial" (font_size 8)))
		(text "data_in[]" (rect 20 18 68 32)(font "Arial" (font_size 8)))
		(line (pt 0 24)(pt 16 24)(line_width 3))
	)
	(port
		(pt 0 40)
		(input)
		(text "sload_data" (rect 20 34 82 48)(font "Arial" (font_size 8)))
		(text "sload_data" (rect 20 34 82 48)(font "Arial" (font_size 8)))
		(line (pt 0 40)(pt 16 40)(line_width 1))
	)
	(port
		(pt 0 120)
		(input)
		(text "sclr" (rect 21 81 42 95)(font "Arial" (font_size 8)))
		(text "sclr" (rect 22 113 43 127)(font "Arial" (font_size 8)))
		(line (pt 0 120)(pt 16 120)(line_width 1))
	)
	(port
		(pt 0 72)
		(input)
		(text "coeff_in[]" (rect 24 64 78 78)(font "Arial" (font_size 8)))
		(text "coeff_in[]" (rect 24 64 78 78)(font "Arial" (font_size 8)))
		(line (pt 0 72)(pt 16 72)(color 0 128 255)(line_width 3))
	)
	(port
		(pt 0 88)
		(input)
		(text "sload_coeff" (rect 24 88 92 102)(font "Arial" (font_size 8)))
		(text "sload_coeff" (rect 24 80 92 94)(font "Arial" (font_size 8)))
		(line (pt 0 88)(pt 16 88)(line_width 1))
	)
	(port
		(pt 168 40)
		(output)
		(text "result_valid" (rect 103 33 167 47)(font "Arial" (font_size 8)))
		(text "result_valid" (rect 89 33 153 47)(font "Arial" (font_size 8)))
		(line (pt 168 40)(pt 152 40)(line_width 1))
	)
	(port
		(pt 168 24)
		(output)
		(text "result[WIDTH_R-1..0]" (rect 111 19 229 33)(font "Arial" (font_size 8)))
		(text "result[]" (rect 112 17 150 31)(font "Arial" (font_size 8)))
		(line (pt 168 24)(pt 152 24)(line_width 3))
	)
	(port
		(pt 168 72)
		(output)
		(text "load_done" (rect 118 64 177 78)(font "Arial" (font_size 8)))
		(text "load_done" (rect 96 64 155 78)(font "Arial" (font_size 8)))
		(line (pt 168 72)(pt 152 72)(line_width 1))
	)
	(parameter
		"WIDTH_D"
		""
		"The width of data_in"
	)
	(parameter
		"WIDTH_C"
		""
		"The width of constant coefficient"
	)
	(parameter
		"WIDTH_R"
		""
		"The width or result"
	)
	(parameter
		"TOTAL_LATENCY"
		""
		"Number of clock cycles from the start to the end of a multiplication"
	)
	(parameter
		"COEFFICIENT0"
		""
		"The first constant coefficient"
	)
	(parameter
		"DATA_REPRESENTATION"
		"\"SIGNED\""
		"Indicates whether data_in[] is signed or unsigned"
		"\"SIGNED\"" "\"UNSIGNED\"" 
	)
	(parameter
		"RAM_BLOCK_TYPE"
		"\"AUTO\""
		"Type of RAM block to be used"
		"\"AUTO\"" "\"M512\"" "\"M4K\"" 
	)
	(drawing
		(rectangle (rect 16 16 152 168)(color 0 0 0)(line_width 1))
	)
	(annotation_block (parameter)(rect 232 -48 416 64))
)
